<tool id="discover" name="DISCOVER" version="1.1">
    <description>performs various typing tools</description>
    <requirements>
        <requirement type="package" version="3.7">python</requirement>
        <requirement type="package" version="5.26.2">perl</requirement>
        <requirement type="package" version="1.7">perl-bioperl</requirement>
        <requirement type="package" version="0.39">trimmomatic</requirement>
        <requirement type="package" version="3.15">spades</requirement>
        <requirement type="package" version="2.4">skesa</requirement>
        <requirement type="package" version="3.8">muscle</requirement>
        <requirement type="package" version="2.3.4">bowtie2</requirement>
        <requirement type="package" version="1.3.1">samtools</requirement>
        <requirement type="package" version="1.3.1">bcftools</requirement>
        <requirement type="package" version="0.7.17">bwa</requirement>
        <requirement type="package" version="2.16.1">mlst</requirement>
        <requirement type="package" version="0.8.10">abricate</requirement>
        <requirement type="package" version="6.6.0">emboss</requirement>
        <requirement type="package" version="2.8">chewbbaca</requirement>
        <requirement type="package" version="2.11.0">blast</requirement>
        <requirement type="package" version="2.6.3">prodigal</requirement>        
    </requirements>
    <!-- basic error handling -->
    <stdio>
        <exit_code range="1:" level="fatal" description="Tool exception" />
    </stdio>
    <command>
<![CDATA[
      perl
      $__tool_directory__/discover.pl $report_out $allelic_profile $amr $contamination
      #if str( $library.library_type ) == "single":
        #set $input_names = []
        #set $input_files = []
        #for $input in $library.input_s
          $input_names.append($input.element_identifier)
          $input_files.append($input)
        #end for
        #set $input_name_str = ",".join(map(str, $input_names))
        #set $input_file_str = ",".join(map(str, $input_files))
        '$input_name_str'
        '$input_file_str'
        'SINGLE'
        'SINGLE'
      #elif str( $library.library_type ) == "paired":
        #set $input_names_1 = []
        #set $input_files_1 = []
        #set $input_names_2 = []
        #set $input_files_2 = []
        #for $input in $library.input_p
          $input_names_1.append($input.element_identifier + "_R1")
          $input_files_1.append($input.forward)
          $input_names_2.append($input.element_identifier + "_R2")
          $input_files_2.append($input.reverse)
        #end for
        #set $input_name_str_1 = ",".join(map(str, $input_names_1))
        #set $input_file_str_1 = ",".join(map(str, $input_files_1))
        #set $input_name_str_2 = ",".join(map(str, $input_names_2))
        #set $input_file_str_2 = ",".join(map(str, $input_files_2))
        '$input_name_str_1'
        '$input_file_str_1'
        '$input_name_str_2'
        '$input_file_str_2'
      #else:
        'ERROR'
        'ERROR'
        'ERROR'
        'ERROR'
      #end if
]]>
    </command>

    <inputs>
        <!-- <param name="isolate_names" format="tabular" type="data" multiple="false" optional="false" label="file with the isolate names associated with the sequence files" /> -->
        <conditional name="library">
            <param name="library_type" type="select" label="Select file format">
                <option value="single" selected="true">Single reads</option>
                <option value="paired">Paired reads</option>
            </param>
            <when value="single">
                <param name="input_s" type="data_collection" optional="false" format="txt" collection_type="list" label="Single-end FASTQ collection" help="Must be of datatype &quot;fastqsanger&quot;"  />
            </when>
            <when value="paired">
                <param name="input_p" type="data_collection" optional="false" format="txt" collection_type="list:paired" label="Paired-end FASTQ collection" help="Must be of datatype &quot;fastqsanger&quot;" />
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="report_out" format="tabular" label="${tool.name} on ${on_string}: report"></data>
        <data name="allelic_profile" format="tabular" label="${tool.name} on ${on_string}: allelic profile"></data>
        <data name="amr" format="tabular" label="${tool.name} on ${on_string}: amr"></data>
        <data name="contamination" format="tabular" label="${tool.name} on ${on_string}: contamination"></data>
        <collection name="contigs" type="list" label="${tool.name} on ${on_string}: contigs">
            <discover_datasets pattern="__designation__" directory="Contigs" format="fasta" />
        </collection>
    </outputs>

    <citations>
      <citation type="doi">10.1093/bioinformatics/btu170</citation>
      <citation type="doi">10.1186/gb-2009-10-3-r25</citation>
      <citation type="doi">10.1038/nmeth.1923</citation>
	  <citation type="bibtex">@ARTICLE{seemann_t,
            author = {Seemann, T},
            keywords = {bioinformatics, ngs},
            title = {{mlst}},
            url = {https://github.com/tseemann/mlst/}
        }</citation>
	  <citation type="bibtex">@ARTICLE{seemann_t,
            author = {Seemann, T},
            keywords = {bioinformatics, ngs},
            title = {{abricate}},
            url = {https://github.com/tseemann/abricate/}
        }</citation>
      <citation type="doi">10.1089/cmb.2012.0021</citation>
	  <citation type="doi">10.1186/s13059-018-1540-z</citation>
      <citation type="doi">10.1128/JCM.00008-15</citation>
      <citation type="bibtex">@ARTICLE{andrews_s,
            author = {Li, M, Copeland, A, and Han, J},
            keywords = {bioinformatics, ngs},
            title = {{DUK – A Fast and Efficient Kmer Based Sequence Matching Tool}},
            url = {https://www.osti.gov/servlets/purl/1016000/}
        }</citation>
      <citation type="bibtex">@ARTICLE{andrews_s,
            author = {Edwards, RA},
            keywords = {bioinformatics, ngs},
            title = {{fastq-pair}},
            url = {https://github.com/linsalrob/fastq-pair/}
        }</citation>
      <citation type="doi">10.1186/1471-2105-10-421</citation>
	  <citation type="doi">10.1093/nar/gkh340</citation>
      <citation type="bibtex">@ARTICLE{andrews_s,
            author = {Rossi, M and Silva, M and Ribeiro-Gonçalves, B and Silva, DN and Machado, MP and Oleastro, M and Borges, V and Isidro, J and Gomes, JP and Vieira, L and Barker, DOR and Llarena, AK and Halkilahti,
            J and Jaakkonen, A and Palma, F and Culebro, A and Kivistö, R and Hänninen, ML and Laukkanen-Ninios, R and Fredriksson-Ahomaa, M and Salmenlinna, S and Hakkinen, M and Garaizer, J and Bikandi, J and Hilbert,
            F and Taboada, EN and Carriço, JA},
            keywords = {bioinformatics, ngs, mlst},
            title = {{INNUENDO whole and core genome MLST databases and schemas for foodborne pathogens}},
            url = {https://github.com/TheInnuendoProject/chewBBACA_schemas}
        }</citation>
      <citation type="doi">10.1099/mgen.0.000166</citation>
      <citation type="doi">10.1371/journal.pgen.1007261</citation>
      <citation type="bibtex">@ARTICLE{hyatt_d,
            author = {Hyatt, D},
            keywords = {bioinformatics, ngs},
            title = {{prodigal}},
            url = {https://github.com/hyattpd/Prodigal/}
        }</citation>
      <citation type="doi">10.1016/S0168-9525(00)02024-2</citation>
      <citation type="doi">10.1101/gr.5578007</citation>


    </citations>
</tool>
